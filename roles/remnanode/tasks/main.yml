---
- name: Validate role dependencies
  ansible.builtin.import_tasks: check_dependencies.yml
  tags:
    - remnanode

- name: Ensure project directory exists
  become: true
  ansible.builtin.file:
    path: "{{ remnanode_project_dir }}"
    state: directory
    mode: "0755"
  tags:
    - remnanode

- name: Ensure required host volumes exist
  become: true
  ansible.builtin.file:
    path: "{{ item.host }}"
    state: directory
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.dir_mode | default('0755') }}"
  loop: "{{ remnanode_compose.volumes | selectattr('type', 'equalto', 'dir') | selectattr('create', 'defined') | selectattr('create') | list }}"
  loop_control:
    label: "{{ item.host }}"
  tags:
    - remnanode

- name: Download .dat assets from URL
  become: true
  ansible.builtin.get_url:
    url: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode | default('0644') }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
  loop: "{{ remnanode_dat_files | selectattr('src_type', 'equalto', 'url') | list }}"
  loop_control:
    label: "{{ item.name | default('unnamed') }}"
  when: remnanode_dat_files is defined
  notify: Restart remnanode
  tags:
    - remnanode
    - remnanode_dat_update

- name: Copy .dat assets from controller
  become: true
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode | default('0644') }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
  loop: "{{ remnanode_dat_files | selectattr('src_type', 'equalto', 'local') | list }}"
  loop_control:
    label: "{{ item.name | default('unnamed') }}"
  when: remnanode_dat_files is defined
  notify: Restart remnanode
  tags:
    - remnanode
    - remnanode_dat_update

- name: Ensure API headers are processed
  ansible.builtin.set_fact:
    remnanode_remnawave_api_headers_processed: >-
      {{ remnanode_remnawave_api_headers | combine({'Content-Type': 'application/json'}) }}
  when: remnanode_ssl_cert_mode == "smart"
  tags:
    - remnanode

- name: Generate .env file
  ansible.builtin.import_tasks: generate_env.yml
  tags:
    - remnanode

- name: Render docker-compose.yml
  become: true
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ remnanode_project_dir }}/docker-compose.yml"
    mode: "0644"
  notify: Start remnanode services
  tags:
    - remnanode

- name: Register node in Remnawave
  ansible.builtin.import_tasks: register_node.yml
  when: remnanode_node.register | default(false) | bool
  tags:
    - remnanode

- name: Ensure remnanode services are started
  ansible.builtin.meta: flush_handlers
  tags:
    - remnanode
